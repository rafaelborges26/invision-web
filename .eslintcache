[{"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx":"1","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx":"2","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx":"3","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx":"4","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts":"5","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts":"6","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx":"7","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts":"8","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx":"9","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts":"10","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts":"11","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx":"12","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts":"13","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx":"14","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts":"15","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/AuthContext.tsx":"16","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/index.tsx":"17"},{"size":198,"mtime":1609297630717,"results":"18","hashOfConfig":"19"},{"size":371,"mtime":1609867516206,"results":"20","hashOfConfig":"19"},{"size":333,"mtime":1609791650105,"results":"21","hashOfConfig":"19"},{"size":3443,"mtime":1609907126746,"results":"22","hashOfConfig":"19"},{"size":2566,"mtime":1609911670906,"results":"23","hashOfConfig":"19"},{"size":397,"mtime":1609299557147,"results":"24","hashOfConfig":"19"},{"size":918,"mtime":1609913420896,"results":"25","hashOfConfig":"19"},{"size":713,"mtime":1609913495644,"results":"26","hashOfConfig":"19"},{"size":1559,"mtime":1609658636320,"results":"27","hashOfConfig":"19"},{"size":703,"mtime":1609913209316,"results":"28","hashOfConfig":"19"},{"size":352,"mtime":1609655952756,"results":"29","hashOfConfig":"19"},{"size":399,"mtime":1609651266216,"results":"30","hashOfConfig":"19"},{"size":806,"mtime":1609791421270,"results":"31","hashOfConfig":"19"},{"size":4245,"mtime":1609887301608,"results":"32","hashOfConfig":"19"},{"size":3118,"mtime":1609804288038,"results":"33","hashOfConfig":"19"},{"size":2175,"mtime":1609880926650,"results":"34","hashOfConfig":"19"},{"size":355,"mtime":1609867455744,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"5ee3vl",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx",[],["76","77","78","79","80"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx",["81","82","83","84","85"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts",["86"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx",["87","88","89"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx",["90","91"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n}\n\n// eslint-disable-next-line react/prop-types\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current?.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container style={containerStyle} isErrored={!!error}>\n      <input\n        defaultValue={defaultValue}\n        ref={inputRef}\n        onBlur={handleInputBlur}\n        onFocus={handleInputFocus}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle size={20} color=\"#C53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts",["92"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const ValidationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    ValidationErrors[error.path] = error.message;\n  });\n  console.log(ValidationErrors);\n  return ValidationErrors;\n}\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx",["93","94","95","96","97","98","99","100","101","102","103","104"],"/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport {\n  Container,\n  Slider,\n  SliderImg,\n  SliderTexts,\n  Content,\n  HeaderContent,\n  Logo,\n  ContentLogin,\n  ContentLoginForm,\n  ContentOR,\n  ButtonLoginGoogle,\n  CreateAccount,\n  LoginAccount,\n} from './styles';\n\nimport SlideView from '../../Components/SlideView';\nimport LogoGoogle from '../../assets/Google__G__Logo.svg';\nimport imgSlider from '../../assets/Data.png';\nimport Input from '../../Components/Input';\nimport { useAuth } from '../../hooks/AuthContext';\n\ninterface SignInFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const { user, signIn } = useAuth();\n\n  console.log(user);\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Este campo n√£o pode ser vazio'),\n          email: Yup.string()\n            .required('Este campo n√£o pode ser vazio')\n            .email('Digite um e-mail v√°lido'),\n          password: Yup.string()\n            .required('Este campo n√£o pode ser vazio')\n            .min(6, 'A senha n√£o deve ter menos de 6 caracteres'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (user.email === data.email) {\n          alert('O e-mail j√° foi criado');\n          throw new Error('O e-mail j√° foi criado.');\n        }\n\n        alert('Usu√°rio criado com sucesso');\n        history.push('/');\n\n        signIn({\n          email: data.email,\n          name: data.name,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        }\n      }\n    },\n    [signIn],\n  );\n\n  const onSuccess = (res: {}) => {\n    console.log('Login sucess', res);\n  };\n\n  const onFailure = (res: {}) => {\n    console.log('login error', res);\n  };\n\n  return (\n    <Container>\n      <Slider>\n        <SliderImg>\n          <SlideView />\n        </SliderImg>\n      </Slider>\n      <Content>\n        <HeaderContent>\n          <Logo>Invision</Logo>\n        </HeaderContent>\n        <ContentLogin>\n          <h1>Welcome to invision</h1>\n          <Form onSubmit={handleSubmit} ref={formRef}>\n            <ContentLoginForm>\n              <p>Full Name</p>\n              <Input name=\"name\" type=\"text\" />\n\n              <p>Users name or Email</p>\n              <Input name=\"email\" type=\"text\" />\n\n              <p>Password</p>\n              <Input name=\"password\" type=\"password\" />\n            </ContentLoginForm>\n            <button type=\"submit\">Sign up</button>\n          </Form>\n        </ContentLogin>\n        <ContentOR>\n          <hr />\n          <p>Or</p>\n          <hr />\n        </ContentOR>\n        <ButtonLoginGoogle>\n          <GoogleLogin\n            clientId=\"75299407960-qiaq4tnsna0k9c8lt0gbs1tlag825pba.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </ButtonLoginGoogle>\n\n        <CreateAccount>\n          <p>\n            By using, you agree to\n            <b> Invision </b>\n          </p>\n          <p>\n            <Link to=\"/signup\">Terms of Conditions </Link>\n            and\n            <Link to=\"/signup\"> Privacy Policy</Link>\n          </p>\n\n          <LoginAccount>\n            <p>\n              Already on\n              <b> Invision? </b>\n              <Link to=\"/\">Log in</Link>\n            </p>\n          </LoginAccount>\n        </CreateAccount>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts",["105"],"import React from 'react';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-evenly;\n  align-content: center;\n  position: relative;\n  height: 100%;\n`;\n\nexport const Slider = styled.div`\n  background-color: #a9c5ba;\n  display: flex;\n  width: 50%;\n`;\n\nexport const SliderImg = styled.div`\n  img {\n    margin: 112px 128px 31px 127px;\n  }\n`;\n\nexport const SliderTexts = styled.div`\n  align-content: center;\n  text-align: center;\n  max-width: 553px;\n  opacity: 1;\n  position: relative;\n  h2 {\n    font-size: 30px;\n    color: #ffffff;\n    margin-bottom: 20px;\n    font-weight: 200;\n    opacity: 1;\n  }\n\n  p {\n    font-size: 20px;\n    color: #ffffff;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  width: 50%;\n`;\n\nexport const HeaderContent = styled.div`\n  margin: 120px 46px 73px 0;\n  display: flex;\n  width: 100%;\n`;\n\nexport const Logo = styled.div`\n  color: #000000;\n  font-size: 35px;\n  text-align: left;\n  opacity: 1;\n  margin-left: auto;\n  margin-right: 46px;\n`;\n\nexport const ContentLogin = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: 30px;\n    letter-spacing: 0px;\n    opacity: 1;\n    font-weight: normal;\n    margin-bottom: 50px;\n  }\n\n  span {\n    font-size: 14px;\n    margin-left: 320px;\n    margin-bottom: 30px;\n  }\n\n  button {\n    width: 175px;\n    height: 45px;\n    border-radius: 100px;\n    background: #707070;\n    color: #ffffff;\n    margin-top: 41px;\n  }\n`;\n\nexport const ContentLoginForm = styled.div`\n  p {\n    font-size: 14px;\n    text-align: left;\n    letter-spacing: 0px;\n    opacity: 1;\n    align-items: initial;\n  }\n`;\n\nexport const ContentOR = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 49px;\n\n  hr {\n    width: 150px;\n    height: 1px;\n    opacity: 1;\n    color: #707070;\n  }\n\n  p {\n    margin: 0 8px;\n    font-size: 18px;\n    opacity: 1;\n    letter-spacing: 0px;\n  }\n`;\n\nexport const ButtonLoginGoogle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: center;\n  align-content: center;\n  background: #ffffff;\n  width: 263px;\n  height: 45px;\n  border-radius: 100px;\n  margin-top: 46px;\n\n  button {\n    border: none;\n    background: #ffffff;\n    margin-bottom: 5px;\n    border-radius: 100px;\n  }\n\n  img {\n    width: 29px;\n    height: 28px;\n    background: #ffffff;\n  }\n\n  span {\n    color: #000000;\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nexport const CreateAccount = styled.div`\n  margin-top: 40px;\n  margin-bottom: 120px;\n  text-align: center;\n  p {\n    font-size: 14px;\n    letter-spacing: 0px;\n  }\n\n  a {\n    color: #a9c5ba;\n    font-size: 16px;\n  }\n`;\n\nexport const LoginAccount = styled.div`\n  margin-top: 10px;\n  text-align: center;\n  p {\n    font-size: 14px;\n    letter-spacing: 0px;\n  }\n\n  a {\n    color: #a9c5ba;\n    font-size: 16px;\n  }\n`;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/AuthContext.tsx",["106"],"import React, { createContext, useCallback, useState, useContext } from 'react';\n\ninterface User {\n  id?: string;\n  name?: string;\n  email: string;\n  password: string; // declarado s√≥ para fazer o fake user\n}\n\ninterface SignInCredentials {\n  email: string;\n  password: string;\n  name?: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credentials: SignInCredentials): void;\n}\n\ninterface AuthState {\n  token: string;\n  user: User;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData); // criar contexto quando as variaveis seram acessadas em diversos locais, ex: nome do usuario\n\nexport const AuthInvision: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    // quando o user sair e voltar pro site\n    const token = localStorage.getItem('@Invision.token');\n    const user = localStorage.getItem('@Invision.user');\n\n    if (token && user) {\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(({ email, password }) => {\n    // metodo para login\n    // console.log(email, password);\n    console.log('chegou');\n    // setando um user de exemplo\n    const token =\n      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c';\n\n    const user: User = {\n      email,\n      password,\n    };\n\n    localStorage.setItem('@Invision.token', token);\n    localStorage.setItem('@Invision.user', JSON.stringify(user)); // usar stringfy por ser um objeto\n    setData({ token, user });\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{ user: data.user, signIn }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function useAuth() {\n  const context = useContext(AuthContext); // passando a var de contexto aqui\n\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider'); // disparar o erro se usar o Auth sem passar o auth provider em volta da tag\n  }\n\n  return context; // se achar retorna\n}\n\nexport default AuthInvision;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/index.tsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":55,"column":11,"nodeType":"119","messageId":"120","endLine":55,"endColumn":39},{"ruleId":"117","severity":1,"message":"118","line":63,"column":9,"nodeType":"119","messageId":"120","endLine":63,"endColumn":36},{"ruleId":"121","severity":1,"message":"122","line":71,"column":5,"nodeType":"123","endLine":71,"endColumn":13,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":75,"column":5,"nodeType":"127","messageId":"120","endLine":75,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":79,"column":5,"nodeType":"127","messageId":"120","endLine":79,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"132","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"133","line":2,"column":17,"nodeType":"130","messageId":"131","endLine":2,"endColumn":26},{"ruleId":"128","severity":1,"message":"134","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":25,"column":10,"nodeType":"130","messageId":"131","endLine":25,"endColumn":19},{"ruleId":"128","severity":1,"message":"136","line":26,"column":10,"nodeType":"130","messageId":"131","endLine":26,"endColumn":18},{"ruleId":"125","severity":1,"message":"126","line":13,"column":3,"nodeType":"127","messageId":"120","endLine":13,"endColumn":14},{"ruleId":"128","severity":1,"message":"137","line":2,"column":30,"nodeType":"130","messageId":"131","endLine":2,"endColumn":39},{"ruleId":"128","severity":1,"message":"138","line":2,"column":49,"nodeType":"130","messageId":"131","endLine":2,"endColumn":57},{"ruleId":"128","severity":1,"message":"139","line":7,"column":23,"nodeType":"130","messageId":"131","endLine":7,"endColumn":42},{"ruleId":"128","severity":1,"message":"140","line":13,"column":3,"nodeType":"130","messageId":"131","endLine":13,"endColumn":14},{"ruleId":"128","severity":1,"message":"141","line":26,"column":8,"nodeType":"130","messageId":"131","endLine":26,"endColumn":18},{"ruleId":"128","severity":1,"message":"142","line":27,"column":8,"nodeType":"130","messageId":"131","endLine":27,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":44,"column":3,"nodeType":"127","messageId":"120","endLine":44,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":66,"column":11,"nodeType":"119","messageId":"120","endLine":66,"endColumn":42},{"ruleId":"117","severity":1,"message":"118","line":70,"column":9,"nodeType":"119","messageId":"120","endLine":70,"endColumn":44},{"ruleId":"121","severity":1,"message":"143","line":85,"column":5,"nodeType":"123","endLine":85,"endColumn":13,"suggestions":"144"},{"ruleId":"125","severity":1,"message":"126","line":89,"column":5,"nodeType":"127","messageId":"120","endLine":89,"endColumn":16},{"ruleId":"125","severity":1,"message":"126","line":93,"column":5,"nodeType":"127","messageId":"120","endLine":93,"endColumn":16},{"ruleId":"128","severity":1,"message":"129","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"126","line":44,"column":5,"nodeType":"127","messageId":"120","endLine":44,"endColumn":16},"lines-around-directive",["145"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-alert","Unexpected alert.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["146"],"no-console","Unexpected console statement.","MemberExpression","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'settings' is defined but never used.","'Component' is defined but never used.","'imgTeste' is defined but never used.","'isFocused' is assigned a value but never used.","'isFilled' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'GoogleLoginResponse' is defined but never used.","'SliderTexts' is defined but never used.","'LogoGoogle' is defined but never used.","'imgSlider' is defined but never used.","React Hook useCallback has missing dependencies: 'history' and 'user.email'. Either include them or remove the dependency array.",["147"],"padding-line-between-statements",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [signIn, user.email]",{"range":"152","text":"153"},"Update the dependencies array to be: [history, signIn, user.email]",{"range":"154","text":"155"},[1881,1889],"[signIn, user.email]",[2322,2330],"[history, signIn, user.email]"]