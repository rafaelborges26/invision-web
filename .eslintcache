[{"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx":"1","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx":"2","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx":"3","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx":"4","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts":"5","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts":"6","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx":"7","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts":"8","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx":"9","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts":"10","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts":"11","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx":"12","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts":"13","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx":"14","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts":"15"},{"size":198,"mtime":1609297630717,"results":"16","hashOfConfig":"17"},{"size":293,"mtime":1609354300533,"results":"18","hashOfConfig":"17"},{"size":333,"mtime":1609791650105,"results":"19","hashOfConfig":"17"},{"size":3238,"mtime":1609832232185,"results":"20","hashOfConfig":"17"},{"size":2887,"mtime":1609638724893,"results":"21","hashOfConfig":"17"},{"size":397,"mtime":1609299557147,"results":"22","hashOfConfig":"17"},{"size":819,"mtime":1609636714606,"results":"23","hashOfConfig":"17"},{"size":747,"mtime":1609573145244,"results":"24","hashOfConfig":"17"},{"size":1559,"mtime":1609658636320,"results":"25","hashOfConfig":"17"},{"size":704,"mtime":1609791361771,"results":"26","hashOfConfig":"17"},{"size":352,"mtime":1609655952756,"results":"27","hashOfConfig":"17"},{"size":399,"mtime":1609651266216,"results":"28","hashOfConfig":"17"},{"size":806,"mtime":1609791421270,"results":"29","hashOfConfig":"17"},{"size":3644,"mtime":1609816149905,"results":"30","hashOfConfig":"17"},{"size":3118,"mtime":1609804288038,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"5ee3vl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx",[],["70","71","72","73","74"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx",["75","76","77","78","79","80","81"],"/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport {\n  Container,\n  Slider,\n  SliderImg,\n  SliderTexts,\n  Content,\n  HeaderContent,\n  Logo,\n  ContentLogin,\n  ContentLoginForm,\n  ContentOR,\n  ButtonLoginGoogle,\n  CreateAccount,\n} from './styles';\n\nimport SlideView from '../../Components/SlideView';\nimport LogoGoogle from '../../assets/Google__G__Logo.svg';\nimport imgSlider from '../../assets/Data.png';\nimport Input from '../../Components/Input';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const handleSubmit = useCallback(async (data: SignInFormData) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        email: Yup.string()\n          .required('Este campo não pode ser vazio')\n          .email('Digite um e-mail válido'),\n        password: Yup.string().required('Este campo não pode ser vazio'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n\n      SignIn({\n        children: { email: data.email, password: data.password },\n      });\n    } catch (err) {\n      console.log(err);\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n        formRef.current?.setErrors(errors);\n      }\n    }\n  }, []);\n\n  const onSuccess = (res: {}) => {\n    console.log('Login sucess', res);\n  };\n\n  const onFailure = (res: {}) => {\n    console.log('login error', res);\n  };\n\n  return (\n    <Container>\n      <Slider>\n        <SliderImg>\n          <SlideView />\n        </SliderImg>\n      </Slider>\n      <Content>\n        <HeaderContent>\n          <Logo>Invision</Logo>\n        </HeaderContent>\n        <ContentLogin>\n          <h1>Welcome to invision</h1>\n          <Form onSubmit={handleSubmit} ref={formRef}>\n            <ContentLoginForm>\n              <p>Users name or Email</p>\n              <Input name=\"email\" type=\"text\" />\n\n              <p>Password</p>\n              <Input name=\"password\" type=\"password\" />\n            </ContentLoginForm>\n\n            <span>Forgot Password?</span>\n            <button type=\"submit\">Sign in</button>\n          </Form>\n        </ContentLogin>\n        <ContentOR>\n          <hr />\n          <p>Or</p>\n          <hr />\n        </ContentOR>\n        <ButtonLoginGoogle>\n          <GoogleLogin\n            clientId=\"75299407960-qiaq4tnsna0k9c8lt0gbs1tlag825pba.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </ButtonLoginGoogle>\n\n        <CreateAccount>\n          <p>\n            New\n            <b> Invision? </b>\n            <Link to=\"/signup\">Create Account</Link>\n          </p>\n        </CreateAccount>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts",["82"],"import React from 'react';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-evenly;\n  align-content: center;\n  position: relative;\n  height: 100%;\n`;\n\nexport const Slider = styled.div`\n  background-color: #a9c5ba;\n  display: flex;\n  width: 50%;\n`;\n\nexport const SliderImg = styled.div`\n  //display: flex;\n  //flex: 1;\n\n  img {\n    margin: 112px 128px 31px 127px;\n  }\n`;\n\nexport const SliderTexts = styled.div`\n  align-content: center;\n  text-align: center;\n  max-width: 553px;\n  opacity: 1;\n  position: relative;\n  h2 {\n    font-size: 30px;\n    color: #ffffff;\n    margin-bottom: 20px;\n    font-weight: 200;\n    opacity: 1;\n  }\n\n  p {\n    font-size: 20px;\n    color: #ffffff;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  width: 50%;\n`;\n\nexport const HeaderContent = styled.div`\n  margin: 120px 46px 73px 0;\n  display: flex;\n  width: 100%;\n`;\n\nexport const Logo = styled.div`\n  color: #000000;\n  font-size: 35px;\n  text-align: left;\n  opacity: 1;\n  margin-left: auto;\n  margin-right: 46px;\n`;\n\nexport const ContentLogin = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: 30px;\n    letter-spacing: 0px;\n    opacity: 1;\n    font-weight: normal;\n    margin-bottom: 87px;\n  }\n\n  span {\n    font-size: 14px;\n    margin-left: 320px;\n    margin-bottom: 30px;\n  }\n\n  button {\n    width: 175px;\n    height: 45px;\n    border-radius: 100px;\n    background: #707070;\n    color: #ffffff;\n  }\n`;\n\nexport const ContentLoginForm = styled.div`\n  p {\n    font-size: 14px;\n    text-align: left;\n    letter-spacing: 0px;\n    opacity: 1;\n    align-items: initial;\n  }\n`;\n\nexport const ContentOR = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 40px;\n\n  hr {\n    width: 150px;\n    height: 1px;\n    opacity: 1;\n    color: #707070;\n  }\n\n  p {\n    margin: 0 8px;\n    font-size: 18px;\n    opacity: 1;\n    letter-spacing: 0px;\n  }\n`;\n\nexport const ButtonLoginGoogle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: center;\n  align-content: center;\n  background: #ffffff;\n  width: 263px;\n  height: 45px;\n  border-radius: 100px;\n  margin-top: 46px;\n\n  button {\n    border: none;\n    background: #ffffff;\n    margin-bottom: 5px;\n  }\n\n  img {\n    width: 29px;\n    height: 28px;\n    background: #ffffff;\n  }\n\n  span {\n    color: #000000;\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nexport const CreateAccount = styled.div`\n  margin-top: 40px;\n  margin-bottom: 120px;\n  p {\n    font-size: 14px;\n    letter-spacing: 0px;\n  }\n\n  a {\n    color: #a9c5ba;\n    font-size: 16px;\n  }\n`;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx",["83","84"],"import { settings } from 'cluster';\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport imgSlider from '../../assets/Data.png';\nimport { Wrapper, Page } from './styles';\n\nconst SliderView: React.FC = () => {\n  return (\n    <Wrapper>\n      <Slider\n        dots\n        infinite\n        speed={500}\n        slidesToShow={1}\n        slidesToScroll={1}\n        adaptiveHeight\n        centerMode\n      >\n        <Page>\n          <img src={imgSlider} alt=\"Marcenas mattis egestas\" />\n          <h2>Marcenas mattis egestas</h2>\n          <p>\n            Erdum et malesuada fames ac ante ileum primmer in faucibus\n            uspendisse porta.\n          </p>\n        </Page>\n        <Page>\n          <p>teste</p>\n        </Page>\n      </Slider>\n    </Wrapper>\n  );\n};\n\nexport default SliderView;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx",["85","86"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n}\n\n// eslint-disable-next-line react/prop-types\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current?.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container style={containerStyle} isErrored={!!error}>\n      <input\n        defaultValue={defaultValue}\n        ref={inputRef}\n        onBlur={handleInputBlur}\n        onFocus={handleInputFocus}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle size={20} color=\"#C53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts",["87"],"import { ValidationError } from 'yup';\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidationErrors(err: ValidationError): Errors {\n  const ValidationErrors: Errors = {};\n\n  err.inner.forEach(error => {\n    ValidationErrors[error.path] = error.message;\n  });\n  console.log(ValidationErrors);\n  return ValidationErrors;\n}\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx",["88","89","90","91","92","93","94"],"/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport {\n  Container,\n  Slider,\n  SliderImg,\n  SliderTexts,\n  Content,\n  HeaderContent,\n  Logo,\n  ContentLogin,\n  ContentLoginForm,\n  ContentOR,\n  ButtonLoginGoogle,\n  CreateAccount,\n  LoginAccount,\n} from './styles';\n\nimport SlideView from '../../Components/SlideView';\nimport LogoGoogle from '../../assets/Google__G__Logo.svg';\nimport imgSlider from '../../assets/Data.png';\nimport Input from '../../Components/Input';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const getData = useCallback(async (data: SignInFormData) => {\n    try {\n      formRef.current?.setErrors({});\n\n      const schema = Yup.object().shape({\n        name: Yup.string().required('Este campo não pode ser vazio'),\n        email: Yup.string()\n          .required('Este campo não pode ser vazio')\n          .email('Digite um e-mail válido'),\n        password: Yup.string()\n          .required('Este campo não pode ser vazio')\n          .min(6, 'A senha não deve ter menos de 6 caracteres'),\n      });\n\n      await schema.validate(data, {\n        abortEarly: false,\n      });\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const errors = getValidationErrors(err);\n        formRef.current?.setErrors(errors);\n      }\n    }\n  }, []);\n\n  const onSuccess = (res: {}) => {\n    console.log('Logis sucess', res);\n  };\n\n  const onFailure = (res: {}) => {\n    console.log('login error', res);\n  };\n\n  return (\n    <Container>\n      <Slider>\n        <SliderImg>\n          <SlideView />\n        </SliderImg>\n      </Slider>\n      <Content>\n        <HeaderContent>\n          <Logo>Invision</Logo>\n        </HeaderContent>\n        <ContentLogin>\n          <h1>Welcome to invision</h1>\n          <Form onSubmit={getData} ref={formRef}>\n            <ContentLoginForm>\n              <p>Full Name</p>\n              <Input name=\"name\" type=\"text\" />\n\n              <p>Users name or Email</p>\n              <Input name=\"email\" type=\"text\" />\n\n              <p>Password</p>\n              <Input name=\"password\" type=\"password\" />\n            </ContentLoginForm>\n            <button type=\"submit\">Sign up</button>\n          </Form>\n        </ContentLogin>\n        <ContentOR>\n          <hr />\n          <p>Or</p>\n          <hr />\n        </ContentOR>\n        <ButtonLoginGoogle>\n          <GoogleLogin\n            clientId=\"75299407960-qiaq4tnsna0k9c8lt0gbs1tlag825pba.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </ButtonLoginGoogle>\n\n        <CreateAccount>\n          <p>\n            By using, you agree to\n            <b> Invision </b>\n          </p>\n          <p>\n            <Link to=\"/signup\">Terms of Conditions </Link>\n            and\n            <Link to=\"/signup\"> Privacy Policy</Link>\n          </p>\n\n          <LoginAccount>\n            <p>\n              Already on\n              <b> Invision? </b>\n              <Link to=\"/\">Log in</Link>\n            </p>\n          </LoginAccount>\n        </CreateAccount>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts",["95"],"import React from 'react';\n\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-evenly;\n  align-content: center;\n  position: relative;\n  height: 100%;\n`;\n\nexport const Slider = styled.div`\n  background-color: #a9c5ba;\n  display: flex;\n  width: 50%;\n`;\n\nexport const SliderImg = styled.div`\n  img {\n    margin: 112px 128px 31px 127px;\n  }\n`;\n\nexport const SliderTexts = styled.div`\n  align-content: center;\n  text-align: center;\n  max-width: 553px;\n  opacity: 1;\n  position: relative;\n  h2 {\n    font-size: 30px;\n    color: #ffffff;\n    margin-bottom: 20px;\n    font-weight: 200;\n    opacity: 1;\n  }\n\n  p {\n    font-size: 20px;\n    color: #ffffff;\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n  width: 50%;\n`;\n\nexport const HeaderContent = styled.div`\n  margin: 120px 46px 73px 0;\n  display: flex;\n  width: 100%;\n`;\n\nexport const Logo = styled.div`\n  color: #000000;\n  font-size: 35px;\n  text-align: left;\n  opacity: 1;\n  margin-left: auto;\n  margin-right: 46px;\n`;\n\nexport const ContentLogin = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  form {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  h1 {\n    font-size: 30px;\n    letter-spacing: 0px;\n    opacity: 1;\n    font-weight: normal;\n    margin-bottom: 50px;\n  }\n\n  span {\n    font-size: 14px;\n    margin-left: 320px;\n    margin-bottom: 30px;\n  }\n\n  button {\n    width: 175px;\n    height: 45px;\n    border-radius: 100px;\n    background: #707070;\n    color: #ffffff;\n    margin-top: 41px;\n  }\n`;\n\nexport const ContentLoginForm = styled.div`\n  p {\n    font-size: 14px;\n    text-align: left;\n    letter-spacing: 0px;\n    opacity: 1;\n    align-items: initial;\n  }\n`;\n\nexport const ContentOR = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 49px;\n\n  hr {\n    width: 150px;\n    height: 1px;\n    opacity: 1;\n    color: #707070;\n  }\n\n  p {\n    margin: 0 8px;\n    font-size: 18px;\n    opacity: 1;\n    letter-spacing: 0px;\n  }\n`;\n\nexport const ButtonLoginGoogle = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: center;\n  align-content: center;\n  background: #ffffff;\n  width: 263px;\n  height: 45px;\n  border-radius: 100px;\n  margin-top: 46px;\n\n  button {\n    border: none;\n    background: #ffffff;\n    margin-bottom: 5px;\n    border-radius: 100px;\n  }\n\n  img {\n    width: 29px;\n    height: 28px;\n    background: #ffffff;\n  }\n\n  span {\n    color: #000000;\n    font-size: 18px;\n    margin-left: 10px;\n  }\n`;\n\nexport const CreateAccount = styled.div`\n  margin-top: 40px;\n  margin-bottom: 120px;\n  text-align: center;\n  p {\n    font-size: 14px;\n    letter-spacing: 0px;\n  }\n\n  a {\n    color: #a9c5ba;\n    font-size: 16px;\n  }\n`;\n\nexport const LoginAccount = styled.div`\n  margin-top: 10px;\n  text-align: center;\n  p {\n    font-size: 14px;\n    letter-spacing: 0px;\n  }\n\n  a {\n    color: #a9c5ba;\n    font-size: 16px;\n  }\n`;\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":38,"nodeType":"108","messageId":"109","endLine":2,"endColumn":46},{"ruleId":"106","severity":1,"message":"110","line":13,"column":3,"nodeType":"108","messageId":"109","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":25,"column":8,"nodeType":"108","messageId":"109","endLine":25,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":26,"column":8,"nodeType":"108","messageId":"109","endLine":26,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":56,"column":7,"nodeType":"115","messageId":"116","endLine":56,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":65,"column":5,"nodeType":"115","messageId":"116","endLine":65,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":69,"column":5,"nodeType":"115","messageId":"116","endLine":69,"endColumn":16},{"ruleId":"106","severity":1,"message":"117","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},{"ruleId":"106","severity":1,"message":"118","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":18},{"ruleId":"106","severity":1,"message":"119","line":2,"column":17,"nodeType":"108","messageId":"109","endLine":2,"endColumn":26},{"ruleId":"106","severity":1,"message":"120","line":25,"column":10,"nodeType":"108","messageId":"109","endLine":25,"endColumn":19},{"ruleId":"106","severity":1,"message":"121","line":26,"column":10,"nodeType":"108","messageId":"109","endLine":26,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":13,"column":3,"nodeType":"115","messageId":"116","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":2,"column":38,"nodeType":"108","messageId":"109","endLine":2,"endColumn":46},{"ruleId":"106","severity":1,"message":"122","line":7,"column":23,"nodeType":"108","messageId":"109","endLine":7,"endColumn":42},{"ruleId":"106","severity":1,"message":"110","line":13,"column":3,"nodeType":"108","messageId":"109","endLine":13,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":26,"column":8,"nodeType":"108","messageId":"109","endLine":26,"endColumn":18},{"ruleId":"106","severity":1,"message":"112","line":27,"column":8,"nodeType":"108","messageId":"109","endLine":27,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":64,"column":5,"nodeType":"115","messageId":"116","endLine":64,"endColumn":16},{"ruleId":"113","severity":1,"message":"114","line":68,"column":5,"nodeType":"115","messageId":"116","endLine":68,"endColumn":16},{"ruleId":"106","severity":1,"message":"117","line":1,"column":8,"nodeType":"108","messageId":"109","endLine":1,"endColumn":13},"lines-around-directive",["123"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'SliderTexts' is defined but never used.","'LogoGoogle' is defined but never used.","'imgSlider' is defined but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'React' is defined but never used.","'settings' is defined but never used.","'Component' is defined but never used.","'isFocused' is assigned a value but never used.","'isFilled' is assigned a value but never used.","'GoogleLoginResponse' is defined but never used.","padding-line-between-statements"]