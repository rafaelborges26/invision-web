[{"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx":"1","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx":"2","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx":"3","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx":"4","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts":"5","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts":"6","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx":"7","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts":"8","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx":"9","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts":"10","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts":"11","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx":"12","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts":"13","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx":"14","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts":"15","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/AuthContext.tsx":"16","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/index.tsx":"17"},{"size":198,"mtime":1609297630717,"results":"18","hashOfConfig":"19"},{"size":371,"mtime":1609867516206,"results":"20","hashOfConfig":"19"},{"size":333,"mtime":1609791650105,"results":"21","hashOfConfig":"19"},{"size":3515,"mtime":1609914855128,"results":"22","hashOfConfig":"19"},{"size":2920,"mtime":1610091398040,"results":"23","hashOfConfig":"19"},{"size":397,"mtime":1609299557147,"results":"24","hashOfConfig":"19"},{"size":981,"mtime":1609914362118,"results":"25","hashOfConfig":"19"},{"size":1575,"mtime":1610091556852,"results":"26","hashOfConfig":"19"},{"size":1559,"mtime":1609658636320,"results":"27","hashOfConfig":"19"},{"size":810,"mtime":1610090863013,"results":"28","hashOfConfig":"19"},{"size":319,"mtime":1609914305706,"results":"29","hashOfConfig":"19"},{"size":399,"mtime":1609651266216,"results":"30","hashOfConfig":"19"},{"size":806,"mtime":1609791421270,"results":"31","hashOfConfig":"19"},{"size":4223,"mtime":1609914308322,"results":"32","hashOfConfig":"19"},{"size":3557,"mtime":1610091390688,"results":"33","hashOfConfig":"19"},{"size":1825,"mtime":1609914228838,"results":"34","hashOfConfig":"19"},{"size":206,"mtime":1609914266710,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19pu8fh",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/index.tsx",[],["75","76","77","78","79"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/App.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/routes/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/index.tsx",["80","81","82"],"/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useCallback, useRef } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport GoogleLogin from 'react-google-login';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport {\n  Container,\n  Slider,\n  SliderImg,\n  Content,\n  HeaderContent,\n  Logo,\n  ContentLogin,\n  ContentLoginForm,\n  ContentOR,\n  ButtonLoginGoogle,\n  CreateAccount,\n} from './styles';\n\nimport SlideView from '../../Components/SlideView';\nimport Input from '../../Components/Input';\nimport { useAuth } from '../../hooks/AuthContext';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const history = useHistory();\n\n  const { signIn, user } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('Este campo não pode ser vazio')\n            .email('Digite um e-mail válido'),\n          password: Yup.string()\n            .required('Este campo não pode ser vazio')\n            .min(6, 'A senha não deve ter menos de 6 caracteres'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (user.email === data.email) {\n          alert('Você já está logado');\n          return;\n        }\n\n        signIn({\n          email: data.email,\n          password: data.password,\n        });\n        alert('Logado com sucesso');\n        history.push('/');\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        }\n      }\n    },\n    [signIn],\n  );\n\n  const onSuccess = (res: {}) => {\n    console.log(res);\n  };\n\n  const onFailure = (res: {}) => {\n    console.log('login error', res);\n  };\n\n  return (\n    <Container>\n      <Slider>\n        <SliderImg>\n          <SlideView />\n        </SliderImg>\n      </Slider>\n      <Content>\n        <HeaderContent>\n          <Logo>Invision</Logo>\n        </HeaderContent>\n        <ContentLogin>\n          <h1>Welcome to invision</h1>\n          <Form onSubmit={handleSubmit} ref={formRef}>\n            <ContentLoginForm>\n              <p>Users name or Email</p>\n              <Input name=\"email\" type=\"text\" />\n\n              <p>Password</p>\n              <Input name=\"password\" type=\"password\" />\n            </ContentLoginForm>\n\n            <span>Forgot Password?</span>\n            <button type=\"submit\">Sign in</button>\n          </Form>\n        </ContentLogin>\n        <ContentOR>\n          <hr />\n          <p>Or</p>\n          <hr />\n        </ContentOR>\n        <ButtonLoginGoogle>\n          <GoogleLogin\n            clientId=\"75299407960-qiaq4tnsna0k9c8lt0gbs1tlag825pba.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </ButtonLoginGoogle>\n\n        <CreateAccount>\n          <p>\n            New\n            <b> Invision? </b>\n            <Link to=\"/signup\">Create Account</Link>\n          </p>\n        </CreateAccount>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignIn/styles.ts",["83"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/styles/global.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/index.tsx",["84","85"],"import { settings } from 'cluster';\nimport React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport imgSlider from '../../assets/Data.png';\nimport imgTeste from '../../assets/students_partner_work-male-male.svg';\nimport { Wrapper, Page } from './styles';\n\nconst SliderView: React.FC = () => {\n  return (\n    <Wrapper>\n      <Slider\n        dots\n        infinite\n        speed={500}\n        slidesToShow={1}\n        slidesToScroll={1}\n        adaptiveHeight\n        centerMode\n      >\n        <Page>\n          <img src={imgSlider} alt=\"Marcenas mattis egestas\" />\n          <h2>Marcenas mattis egestas</h2>\n          <p>Erdum et malesuada fames ac ante ileum primmer in</p>\n          <p> faucibus uspendisse porta.</p>\n        </Page>\n        <Page>\n          <img src={imgTeste} alt=\"Marcenas mattis egestas\" />\n          <h2>Testing</h2>\n          <p>Testing the slideView.</p>\n        </Page>\n      </Slider>\n    </Wrapper>\n  );\n};\n\nexport default SliderView;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/SlideView/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/index.tsx",["86","87"],"import React, {\n  InputHTMLAttributes,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { useField } from '@unform/core';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { Container, Error } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  containerStyle?: object;\n}\n\n// eslint-disable-next-line react/prop-types\nconst Input: React.FC<InputProps> = ({\n  name,\n  containerStyle = {},\n  ...rest\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    if (inputRef.current?.value) {\n      setIsFilled(true);\n    } else {\n      setIsFilled(false);\n    }\n  }, []);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container style={containerStyle} isErrored={!!error}>\n      <input\n        defaultValue={defaultValue}\n        ref={inputRef}\n        onBlur={handleInputBlur}\n        onFocus={handleInputFocus}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle size={20} color=\"#C53030\" />\n        </Error>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Input/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/utils/getValidationErrors.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/index.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/Components/Tooltip/styles.ts",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/index.tsx",["88","89","90","91","92","93","94","95","96"],"/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport GoogleLogin, { GoogleLoginResponse } from 'react-google-login';\nimport getValidationErrors from '../../utils/getValidationErrors';\nimport {\n  Container,\n  Slider,\n  SliderImg,\n  SliderTexts,\n  Content,\n  HeaderContent,\n  Logo,\n  ContentLogin,\n  ContentLoginForm,\n  ContentOR,\n  ButtonLoginGoogle,\n  CreateAccount,\n  LoginAccount,\n} from './styles';\n\nimport SlideView from '../../Components/SlideView';\nimport LogoGoogle from '../../assets/Google__G__Logo.svg';\nimport imgSlider from '../../assets/Data.png';\nimport Input from '../../Components/Input';\nimport { useAuth } from '../../hooks/AuthContext';\n\ninterface SignInFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const history = useHistory();\n\n  const formRef = useRef<FormHandles>(null);\n\n  const { user, signIn } = useAuth();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Este campo não pode ser vazio'),\n          email: Yup.string()\n            .required('Este campo não pode ser vazio')\n            .email('Digite um e-mail válido'),\n          password: Yup.string()\n            .required('Este campo não pode ser vazio')\n            .min(6, 'A senha não deve ter menos de 6 caracteres'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        if (user.email === data.email) {\n          alert('O e-mail já foi criado');\n          throw new Error('O e-mail já foi criado.');\n        }\n\n        alert('Usuário criado com sucesso');\n        history.push('/');\n\n        signIn({\n          email: data.email,\n          name: data.name,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n          formRef.current?.setErrors(errors);\n        }\n      }\n    },\n    [signIn],\n  );\n\n  const onSuccess = (res: {}) => {\n    console.log('Login sucess', res);\n  };\n\n  const onFailure = (res: {}) => {\n    console.log('login error', res);\n  };\n\n  return (\n    <Container>\n      <Slider>\n        <SliderImg>\n          <SlideView />\n        </SliderImg>\n      </Slider>\n      <Content>\n        <HeaderContent>\n          <Logo>Invision</Logo>\n        </HeaderContent>\n        <ContentLogin>\n          <h1>Welcome to invision</h1>\n          <Form onSubmit={handleSubmit} ref={formRef}>\n            <ContentLoginForm>\n              <p>Full Name</p>\n              <Input name=\"name\" type=\"text\" />\n\n              <p>Users name or Email</p>\n              <Input name=\"email\" type=\"text\" />\n\n              <p>Password</p>\n              <Input name=\"password\" type=\"password\" />\n            </ContentLoginForm>\n            <button type=\"submit\">Sign up</button>\n          </Form>\n        </ContentLogin>\n        <ContentOR>\n          <hr />\n          <p>Or</p>\n          <hr />\n        </ContentOR>\n        <ButtonLoginGoogle>\n          <GoogleLogin\n            clientId=\"75299407960-qiaq4tnsna0k9c8lt0gbs1tlag825pba.apps.googleusercontent.com\"\n            buttonText=\"Login with Google\"\n            onSuccess={onSuccess}\n            onFailure={onFailure}\n            cookiePolicy=\"single_host_origin\"\n          />\n        </ButtonLoginGoogle>\n\n        <CreateAccount>\n          <p>\n            By using, you agree to\n            <b> Invision </b>\n          </p>\n          <p>\n            <Link to=\"/signup\">Terms of Conditions </Link>\n            and\n            <Link to=\"/signup\"> Privacy Policy</Link>\n          </p>\n\n          <LoginAccount>\n            <p>\n              Already on\n              <b> Invision? </b>\n              <Link to=\"/\">Log in</Link>\n            </p>\n          </LoginAccount>\n        </CreateAccount>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/rafaelborges/Documentos/Code/Projects/invision-web/src/pages/SignUp/styles.ts",["97"],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/AuthContext.tsx",[],"/home/rafaelborges/Documentos/Code/Projects/invision-web/src/hooks/index.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":74,"column":5,"nodeType":"110","endLine":74,"endColumn":13,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":78,"column":5,"nodeType":"114","messageId":"115","endLine":78,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":82,"column":5,"nodeType":"114","messageId":"115","endLine":82,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"120","line":1,"column":10,"nodeType":"118","messageId":"119","endLine":1,"endColumn":18},{"ruleId":"116","severity":1,"message":"121","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"122","line":25,"column":10,"nodeType":"118","messageId":"119","endLine":25,"endColumn":19},{"ruleId":"116","severity":1,"message":"123","line":26,"column":10,"nodeType":"118","messageId":"119","endLine":26,"endColumn":18},{"ruleId":"116","severity":1,"message":"124","line":2,"column":30,"nodeType":"118","messageId":"119","endLine":2,"endColumn":39},{"ruleId":"116","severity":1,"message":"125","line":2,"column":49,"nodeType":"118","messageId":"119","endLine":2,"endColumn":57},{"ruleId":"116","severity":1,"message":"126","line":7,"column":23,"nodeType":"118","messageId":"119","endLine":7,"endColumn":42},{"ruleId":"116","severity":1,"message":"127","line":13,"column":3,"nodeType":"118","messageId":"119","endLine":13,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":26,"column":8,"nodeType":"118","messageId":"119","endLine":26,"endColumn":18},{"ruleId":"116","severity":1,"message":"129","line":27,"column":8,"nodeType":"118","messageId":"119","endLine":27,"endColumn":17},{"ruleId":"108","severity":1,"message":"109","line":83,"column":5,"nodeType":"110","endLine":83,"endColumn":13,"suggestions":"130"},{"ruleId":"112","severity":1,"message":"113","line":87,"column":5,"nodeType":"114","messageId":"115","endLine":87,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":91,"column":5,"nodeType":"114","messageId":"115","endLine":91,"endColumn":16},{"ruleId":"116","severity":1,"message":"117","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},"lines-around-directive",["131"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'history' and 'user.email'. Either include them or remove the dependency array.","ArrayExpression",["132"],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'settings' is defined but never used.","'Component' is defined but never used.","'isFocused' is assigned a value but never used.","'isFilled' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'GoogleLoginResponse' is defined but never used.","'SliderTexts' is defined but never used.","'LogoGoogle' is defined but never used.","'imgSlider' is defined but never used.",["133"],"padding-line-between-statements",{"desc":"134","fix":"135"},{"desc":"134","fix":"136"},"Update the dependencies array to be: [history, signIn, user.email]",{"range":"137","text":"138"},{"range":"139","text":"138"},[1953,1961],"[history, signIn, user.email]",[2300,2308]]